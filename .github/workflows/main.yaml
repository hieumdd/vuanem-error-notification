name: CI/CD

on:
  push:
    branches:
      - master
      - dev
  workflow_dispatch:

concurrency: ${{ github.ref }}

env:
  ENV_KEY: env-vars
  ENV_FILE: env.yaml
  GCP_SA: bivuanem@voltaic-country-280607.iam.gserviceaccount.com

jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      fn-name: ${{ steps.set-fn-name.outputs.fn-name }}
    steps:
      - name: Set env vars (dev)
        if: github.ref_name == 'dev'
        run: |
          echo "FUNCTION_NAME=vuanem-error-notification-dev" >> $GITHUB_ENV

      - name: Set env vars (prod)
        if: github.ref_name == 'master'
        run: |
          echo "FUNCTION_NAME=vuanem-error-notification" >> $GITHUB_ENV

      - id: set-fn-name
        name: Set Function Name
        run: echo "::set-output name=fn-name::${{ env.FUNCTION_NAME}}"

      - name: Create ${{ env.ENV_KEY }}
        run: |
          echo "TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}" >> ${{ env.ENV_FILE }}

      - name: Upload ${{ env.ENV_FILE }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ENV_KEY }}
          path: ${{ env.ENV_FILE }}

  deploy:
    runs-on: ubuntu-latest
    needs: set-env
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: ${{ env.ENV_KEY }}

      - uses: actions/setup-node@v2
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - run: npm install

      - run: tsc --sourceMap false

      - run: |
          cp package.json dist/package.json
          cp package-lock.json dist/package-lock.json

      - uses: "google-github-actions/auth@v0"
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - uses: "google-github-actions/setup-gcloud@v0"

      - run: >-
          gcloud functions deploy ${{ needs.set-env.outputs.fn-name }}
          --entry-point=main
          --source=dist
          --region=us-central1
          --timeout=530
          --memory=256MB
          --runtime=nodejs16
          --trigger-http
          --no-user-output-enabled
          --service-account=${{ env.GCP_SA }}
          --env-vars-file=${{ env.ENV_FILE }}
          --allow-unauthenticated

  clean-up:
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
      - run: echo "" > ${{ env.ENV_FILE }}

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ENV_KEY }}
          path: ${{ env.ENV_FILE }}
